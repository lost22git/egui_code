name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
jobs:
  build:
    name: build app on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        include:
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          
      - name: Rustup add target ${{ matrix.target }}
        run: rustup target add ${{ matrix.target }}
      
      - name: Install deps
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get install librust-atk-dev build-essential libgtk-3-dev
        #run: sudo apt-get install pkg-config musl-tools librust-atk-dev build-essential libgtk-3-dev 

      - name: Build
        run: cargo build --profile opt --target ${{ matrix.target }} --verbose
      
      - name: Upload binary
        if: matrix.os != 'windows-latest'
        uses: actions/upload-artifact@v2
        with:
          name: egui_code-${{ matrix.target }}
          path: target/${{ matrix.target }}/opt/egui_code
          
      - name: Upload binary
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v2
        with:
          name: egui_code-${{ matrix.target }}.exe
          path: target\${{ matrix.target }}\opt\egui_code.exe


